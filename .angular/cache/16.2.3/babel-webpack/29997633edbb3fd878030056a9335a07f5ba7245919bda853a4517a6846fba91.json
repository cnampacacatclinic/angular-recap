{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { GenreEnum } from '../utils/enum/GenreEnum';\nimport { Component } from '@angular/core';\nexport let HomeComponent = class HomeComponent {\n  //private dvdServiceService : DvdServiceService\n  constructor() {\n    this.dvds = [{\n      name: 'INTO THE WILD',\n      genre: GenreEnum.DRAMA,\n      imgPath: 'assets/images/IntoTheWildCover.png'\n    }, {\n      name: 'MARTYRS',\n      genre: GenreEnum.HORROR,\n      imgPath: 'assets/images/MartyrsCover.png'\n    }, {\n      name: 'ONLY GOD FORGIVES',\n      genre: GenreEnum.THRILLER,\n      imgPath: 'assets/images/OnlyGodForgivesCover.png'\n    }, {\n      name: 'CLOUD ATLAS',\n      genre: GenreEnum.SCIENCE_FICTION,\n      imgPath: 'assets/images/CloudAtlasCover.png'\n    }];\n    this.dvdToShow = [];\n    this.genreFilter = '';\n    this.handleGenreClickButton = genre => {\n      this.dvdToShow = this.dvds.filter(value => {\n        return value.genre === genre;\n      });\n    };\n  }\n  ngOnInit() {\n    this.dvdToShow = this.dvds;\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})], HomeComponent);","map":{"version":3,"names":["GenreEnum","Component","HomeComponent","constructor","dvds","name","genre","DRAMA","imgPath","HORROR","THRILLER","SCIENCE_FICTION","dvdToShow","genreFilter","handleGenreClickButton","filter","value","ngOnInit","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Documents\\Projets Personnels\\Qalam Software\\Donner des cours\\e vogue\\simplon\\pre-angular\\angular-recap\\src\\app\\home\\home.component.ts"],"sourcesContent":["\nimport { GenreEnum } from '../utils/enum/GenreEnum';\nimport { DvdServiceService } from './../dvd-service.service';\nimport { Component, OnInit } from '@angular/core';\n\nexport interface Dvd {\n  name: string,\n  genre: GenreEnum,\n  imgPath: string\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit{\n\n  dvds : Array<Dvd>  = [\n    {\n      name: 'INTO THE WILD',\n      genre: GenreEnum.DRAMA,\n      imgPath :'assets/images/IntoTheWildCover.png'\n    },\n    {\n      name: 'MARTYRS',\n      genre: GenreEnum.HORROR,\n      imgPath :'assets/images/MartyrsCover.png'\n    },\n\n    {\n      name: 'ONLY GOD FORGIVES',\n      genre: GenreEnum.THRILLER,\n      imgPath :'assets/images/OnlyGodForgivesCover.png'\n    },\n\n    {\n      name: 'CLOUD ATLAS',\n      genre: GenreEnum.SCIENCE_FICTION,\n      imgPath :'assets/images/CloudAtlasCover.png'\n    }\n  ]\n\n  dvdToShow : Array<Dvd> = []\n\n  genreFilter: string = ''\n\n  //private dvdServiceService : DvdServiceService\n  constructor() {\n\n  }\n\n  handleGenreClickButton = (genre : string) => {\n    this.dvdToShow = this.dvds.filter((value) => {\n      return value.genre === genre\n    })\n  }\n\n\n  ngOnInit() {\n    this.dvdToShow = this.dvds\n  }\n  /*async ngOnInit() {\n    //chercher les données\n    //Si je n'arrive pas à recuperer les données je dois surement mapper\n    const dvdGetAlldtos = await this.dvdServiceService.getAllDvd()\n\n    /* meme chose que :\n    for (let x of dvdGetAlldtos) {\n      const dvd : Dvd = {\n        name: x.name,\n        genre: x.genre,\n        imgPath: x.imgPath\n      }\n      this.dvds.push(dvd);\n    }\n\n    recherche par nom :\n     dvdGetAlldtos.filter((value) => {\n      return value.name === 'matrix'\n    })\n\n\n    dvdGetAlldtos.map((value) => {\n      const dvd : Dvd = {\n        name: value.name,\n        genre: value.genre,\n        imgPath: value.imgPath\n      }\n      this.dvds.push(dvd);\n    })\n  }*/\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAQ,yBAAyB;AAEnD,SAASC,SAAS,QAAgB,eAAe;AAa1C,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EA+BxB;EACAC,YAAA;IA9BA,KAAAC,IAAI,GAAiB,CACnB;MACEC,IAAI,EAAE,eAAe;MACrBC,KAAK,EAAEN,SAAS,CAACO,KAAK;MACtBC,OAAO,EAAE;KACV,EACD;MACEH,IAAI,EAAE,SAAS;MACfC,KAAK,EAAEN,SAAS,CAACS,MAAM;MACvBD,OAAO,EAAE;KACV,EAED;MACEH,IAAI,EAAE,mBAAmB;MACzBC,KAAK,EAAEN,SAAS,CAACU,QAAQ;MACzBF,OAAO,EAAE;KACV,EAED;MACEH,IAAI,EAAE,aAAa;MACnBC,KAAK,EAAEN,SAAS,CAACW,eAAe;MAChCH,OAAO,EAAE;KACV,CACF;IAED,KAAAI,SAAS,GAAgB,EAAE;IAE3B,KAAAC,WAAW,GAAW,EAAE;IAOxB,KAAAC,sBAAsB,GAAIR,KAAc,IAAI;MAC1C,IAAI,CAACM,SAAS,GAAG,IAAI,CAACR,IAAI,CAACW,MAAM,CAAEC,KAAK,IAAI;QAC1C,OAAOA,KAAK,CAACV,KAAK,KAAKA,KAAK;MAC9B,CAAC,CAAC;IACJ,CAAC;EAND;EASAW,QAAQA,CAAA;IACN,IAAI,CAACL,SAAS,GAAG,IAAI,CAACR,IAAI;EAC5B;CA+BD;AA5EYF,aAAa,GAAAgB,UAAA,EALzBjB,SAAS,CAAC;EACTkB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWnB,aAAa,CA4EzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}